"use strict";(self.webpackChunkaltair_docs=self.webpackChunkaltair_docs||[]).push([[1172],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>u});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),m=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=m(e.components);return n.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=m(r),u=a,h=d["".concat(p,".").concat(u)]||d[u]||c[u]||i;return r?n.createElement(h,o(o({ref:t},s),{},{components:r})):n.createElement(h,o({ref:t},s))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var m=2;m<i;m++)o[m]=r[m];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1106:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>m});var n=r(7462),a=(r(7294),r(3905));const i={},o="C programming",l={unversionedId:"Programming-the-Altair/C-programming",id:"Programming-the-Altair/C-programming",title:"C programming",description:"The BD Software C compiler is included on drive A if you have the CP/M filesystem loaded on the Micro SD card. The following text is an exert from the BDS C Wikipedia article.",source:"@site/docs/02-Programming-the-Altair/03-C-programming.md",sourceDirName:"02-Programming-the-Altair",slug:"/Programming-the-Altair/C-programming",permalink:"/altair_8800_posix_docs/Programming-the-Altair/C-programming",draft:!1,editUrl:"https://github.com/gloveboxes/altair_8800_posix_docs/tree/main/docs/02-Programming-the-Altair/03-C-programming.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Microsoft BASIC",permalink:"/altair_8800_posix_docs/Programming-the-Altair/Microsoft-BASIC-programming"},next:{title:"Intel 8080 Assembler",permalink:"/altair_8800_posix_docs/Programming-the-Altair/Assembly-programming"}},p={},m=[{value:"BDS C User&#39;s Guide",id:"bds-c-users-guide",level:2},{value:"Compile C applications",id:"compile-c-applications",level:2},{value:"Editing hw.c with Word-Master",id:"editing-hwc-with-word-master",level:2}],s={toc:m};function c(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"c-programming"},"C programming"),(0,a.kt)("p",null,"The BD Software C compiler is included on drive A: or drive B: if you have the CP/M filesystem loaded on the Micro SD card. The following text is an exert from the ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/BDS_C"},"BDS C Wikipedia")," article."),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},'BDS C (or the BD Software C Compiler) is a compiler for a sizeable subset of the C programming language, that ran on and generated code for the Intel 8080 and Zilog Z80 processors. It was the first C compiler for CP/M. It was written by Leor Zolman and first released in 1979 when he was 20 years old. "BDS" stands for "Brain Damage Software."')),(0,a.kt)("h2",{id:"bds-c-users-guide"},"BDS C User's Guide"),(0,a.kt)("p",null,"Refer to the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/AzureSphereCloudEnabledAltair8800/Altair8800.manuals/blob/master/BDS_C_Compiler.pdf"},"BDS C User's Guide")," for more about the language and its implementation."),(0,a.kt)("h2",{id:"compile-c-applications"},"Compile C applications"),(0,a.kt)("p",null,"The CP/M disk image includes a simple ",(0,a.kt)("em",{parentName:"p"},"HW.C")," (Hello, world) application. BDS C language has support for Intel 8080 CPU input and output port instructions. The ",(0,a.kt)("em",{parentName:"p"},"HW.C")," application displays the system tick count, UTC, and local date and time, and then sleeps for 1 second. For more information about Intel 8080 IO port mappings, refer to ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/gloveboxes/Altair8800.Emulator.UN-X/wiki#intel-8080-input-and-output-ports"},"Intel 8080 input and output ports"),"."),(0,a.kt)("p",null,"Follow these steps to list, compile, link, and run the ",(0,a.kt)("em",{parentName:"p"},"HW.C")," file:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"List the ",(0,a.kt)("em",{parentName:"p"},"hw.c")," file"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-cpm"},"type hw.c\n")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-c"},'/* Copyright (c) Microsoft Corporation. All rights reserved.\n   Licensed under the MIT License. */\n\n/* C application to demonstrate use of Intel 8080 IO Ports */\n\nmain()\n{\n    unsigned c, l;\n    char buffer[50];\n\n    printf("\\nHello from the Altair 8800 emulator\\n\\n");\n\n    for (c = 0; c < 65535; c++)\n    {\n        printf("Count:%u\\n", c);\n        printf("System tick count: %s\\n", get_port_data(41, buffer, 50));\n        printf("UTC date and time: %s\\n", get_port_data(42, buffer, 50));\n        printf("Local date and time: %s\\n\\n", get_port_data(43, buffer, 50));\n\n        sleep(1); /* Sleep for 1 second */\n    }\n}\n\n/* Sleep for n seconds */\nsleep(seconds)\nchar seconds;\n{\n    outp(30, seconds); /* Enable sleep for N seconds */\n    while (inp(30)); /* Wait for sleep to expire */\n}\n\n/* Get data from Intel 8080 IO port */\nchar *get_port_data(port_num, buffer, buffer_len)\nint port_num;\nchar *buffer;\nint buffer_len;\n{\n    char ch;\n    int index;\n\n    index = 0;\n\n    while ((ch = inp(port_num)) && index < buffer_len) {\n        buffer[index++] = ch;\n    }\n    buffer[index] = 0x00;\n\n    return buffer;\n}\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Compile the ",(0,a.kt)("em",{parentName:"p"},"hw.c")," file:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-cpm"},"cc hw\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Link the ",(0,a.kt)("em",{parentName:"p"},"hw")," application:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-cpm"},"clink hw\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Run the ",(0,a.kt)("em",{parentName:"p"},"hw")," application:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-cpm"},"hw\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Stop the ",(0,a.kt)("em",{parentName:"p"},"hw")," application by selecting ",(0,a.kt)("strong",{parentName:"p"},"Ctrl+C"),"."))),(0,a.kt)("h2",{id:"editing-hwc-with-word-master"},"Editing hw.c with Word-Master"),(0,a.kt)("p",null,"In the following steps use the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/AzureSphereCloudEnabledAltair8800/Altair8800.manuals/blob/master/Word-Master_Manual.pdf"},"Word-Master text editor")," to edit a file. It's highly recommended to ",(0,a.kt)("a",{parentName:"p",href:"Editing-files"},"edit files with Visual Studio Code")," and then copy the file to the Altair filesystem using the CP/M gf command."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Edit the ",(0,a.kt)("em",{parentName:"p"},"hw.c")," file with Word-Master:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-cpm"},"wm hw.c\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Switch the web terminal to character input mode by selecting ",(0,a.kt)("strong",{parentName:"p"},"Ctrl+L"),".")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Make your changes to the ",(0,a.kt)("em",{parentName:"p"},"hw.c")," file.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Save your updates to the ",(0,a.kt)("em",{parentName:"p"},"hw.c")," file:"),(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},"Select the ",(0,a.kt)("strong",{parentName:"li"},"Esc")," key."),(0,a.kt)("li",{parentName:"ol"},"Select ",(0,a.kt)("strong",{parentName:"li"},"E")," to exit. Your file changes are saved to disk."))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Switch the web terminal to line input mode by selecting ",(0,a.kt)("strong",{parentName:"p"},"Ctrl+L"),".")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Then compile, link, and run the updated hw.c application."))))}c.isMDXComponent=!0}}]);