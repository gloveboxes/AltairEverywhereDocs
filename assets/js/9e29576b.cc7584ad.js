"use strict";(self.webpackChunkaltair_docs=self.webpackChunkaltair_docs||[]).push([[1085],{4137:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>h});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),p=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=p(r),m=n,h=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return r?a.createElement(h,l(l({ref:t},s),{},{components:r})):a.createElement(h,l({ref:t},s))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[d]="string"==typeof e?e:n,l[1]=i;for(var p=2;p<o;p++)l[p]=r[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},355:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=r(7462),n=(r(7294),r(4137));const o={},l="Add cloud services",i={unversionedId:"deploy-with-docker/Start-cloud-connected-Altair",id:"deploy-with-docker/Start-cloud-connected-Altair",title:"Add cloud services",description:"Stop the Altair docker container",source:"@site/docs/40-deploy-with-docker/20-Start-cloud-connected-Altair.md",sourceDirName:"40-deploy-with-docker",slug:"/deploy-with-docker/Start-cloud-connected-Altair",permalink:"/altair_8800_docs/deploy-with-docker/Start-cloud-connected-Altair",draft:!1,editUrl:"https://github.com/gloveboxes/altair_8800_docs/tree/main/docs/40-deploy-with-docker/20-Start-cloud-connected-Altair.md",tags:[],version:"current",sidebarPosition:20,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Start the Altair emulator",permalink:"/altair_8800_docs/deploy-with-docker/start-container"},next:{title:"Build docker images",permalink:"/altair_8800_docs/deploy-with-docker/Create-Docker-images"}},c={},p=[{value:"Stop the Altair docker container",id:"stop-the-altair-docker-container",level:2},{value:"Create an environment file",id:"create-an-environment-file",level:2},{value:"Select the Altair Docker image",id:"select-the-altair-docker-image",level:2},{value:"Open the Web Terminal",id:"open-the-web-terminal",level:2}],s={toc:p},d="wrapper";function u(e){let{components:t,...o}=e;return(0,n.kt)(d,(0,a.Z)({},s,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"add-cloud-services"},"Add cloud services"),(0,n.kt)("h2",{id:"stop-the-altair-docker-container"},"Stop the Altair docker container"),(0,n.kt)("p",null,"First, stop the Altair Docker container. From a terminal window, run the following command."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker stop altair8800\n")),(0,n.kt)("h2",{id:"create-an-environment-file"},"Create an environment file"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Using your text editor of your choice create a ",(0,n.kt)("strong",{parentName:"p"},"altair.env")," environment file.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Add the following keys to the file:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-env"},"ID_SCOPE=\nDEVICE_ID=\nDERIVED_KEY=\nOPEN_WEATHER_MAP_API_KEY=\nTZ=Australia/Sydney\n")),(0,n.kt)("p",{parentName:"li"},"The ID_SCOPE, DEVICE_ID, and DERIVED_KEY values are used to connect the Altair emulator to Azure IoT Central. The OPEN_WEATHER_MAP_API_KEY value is used to connect the Altair emulator to Open Weather Map. The TZ value is used to set the time zone for the Altair emulator.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Update the values with your data you copied from the ",(0,n.kt)("a",{parentName:"p",href:"/altair_8800_docs/fundamentals/Cloud-services/Add-cloud-services"},"Cloud sevices")," page."),(0,n.kt)("admonition",{parentName:"li",type:"tip"},(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"If you don't use a service then leave the key-value blank."),(0,n.kt)("li",{parentName:"ul"},"Don't include any speech marks in key-values."),(0,n.kt)("li",{parentName:"ul"},"Replace the Australia/Sydney time zone with your local time zone."))))),(0,n.kt)("ol",{start:3},(0,n.kt)("li",{parentName:"ol"},"Save the file as ",(0,n.kt)("strong",{parentName:"li"},"~/altair.env"),". The commands below assume you have saved the Altair environment file to your computer or device's home directory.")),(0,n.kt)("h2",{id:"select-the-altair-docker-image"},"Select the Altair Docker image"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"For general use on 64-bit ",(0,n.kt)("a",{parentName:"p",href:"#general-linux-macos-windows-and-raspberry-pi-users"},"Linux, macOS, Windows, and Raspberry Pi operating systems"),". Run the following command."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -d --env-file ~/altair.env -p 8082:8082 -p 80:80 -v altair-disks:/Altairdocker/AltairHL_emulator/Disks --name altair8800 --rm glovebox/altair8800:latest\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"For a Raspberry Pi running ",(0,n.kt)("a",{parentName:"p",href:"#raspberry-pi-with-pi-sense-hat-users"},"Raspberry Pi OS with a Pi Sense HAT"),". Run the following command."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -d --env-file ~/altair.env --privileged -p 8082:8082 -p 80:80 -v altair-disks:/Altairdocker/AltairHL_emulator/Disks --name altair8800 --rm glovebox/altair8800-pisense:latest\n")))),(0,n.kt)("h2",{id:"open-the-web-terminal"},"Open the Web Terminal"),(0,n.kt)("p",null,"Open the Web Terminal to access the Altair emulator. Open your web browser:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Navigate to ",(0,n.kt)("inlineCode",{parentName:"li"},"http://localhost")," if you deployed the Altair emulator on your local computer."),(0,n.kt)("li",{parentName:"ul"},"Navigate to ",(0,n.kt)("inlineCode",{parentName:"li"},"http://hostname_or_ip_address")," if you deployed the Altair emulator on a remote computer.")),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"The image shows the web terminal",src:r(7020).Z,width:"2268",height:"1406"})))}u.isMDXComponent=!0},7020:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/web_terminal_intro-7ea4273609a1bb03edf7db67215efb5f.png"}}]);