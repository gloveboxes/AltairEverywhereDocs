"use strict";(self.webpackChunkaltair_docs=self.webpackChunkaltair_docs||[]).push([[6394],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>d});var a=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,o=function(e,t){if(null==e)return{};var r,a,o={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=a.createContext({}),u=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},m=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,n=e.originalType,p=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),s=u(r),d=o,f=s["".concat(p,".").concat(d)]||s[d]||c[d]||n;return r?a.createElement(f,l(l({ref:t},m),{},{components:r})):a.createElement(f,l({ref:t},m))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=r.length,l=new Array(n);l[0]=s;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var u=2;u<n;u++)l[u]=r[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}s.displayName="MDXCreateElement"},509:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>c,frontMatter:()=>n,metadata:()=>i,toc:()=>u});var a=r(7462),o=(r(7294),r(3905));const n={},l="Start the Altair emulator",i={unversionedId:"Compile-the-Altair/Run-the-emulator",id:"Compile-the-Altair/Run-the-emulator",title:"Start the Altair emulator",description:"1. From a terminal window, go to the Altair8800/AltairHL_emulator folder that you cloned to your computer.",source:"@site/docs/03-Compile-the-Altair/05-Run-the-emulator.md",sourceDirName:"03-Compile-the-Altair",slug:"/Compile-the-Altair/Run-the-emulator",permalink:"/altair_8800_posix_docs/Compile-the-Altair/Run-the-emulator",draft:!1,editUrl:"https://github.com/gloveboxes/altair_8800_posix_docs/tree/main/docs/03-Compile-the-Altair/05-Run-the-emulator.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Build from the command line",permalink:"/altair_8800_posix_docs/Compile-the-Altair/Compile-from-CLI"},next:{title:"Build docker images",permalink:"/altair_8800_posix_docs/Create-Docker-images"}},p={},u=[],m={toc:u};function c(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"start-the-altair-emulator"},"Start the Altair emulator"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"From a terminal window, go to the ",(0,o.kt)("strong",{parentName:"p"},"Altair8800/AltairHL_emulator")," folder that you cloned to your computer.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Before you start the emulator, you need the following information."),(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"ID_SCOPE: Azure IoT Central ID Scope"),(0,o.kt)("li",{parentName:"ol"},"DEVICE_ID: Azure IoT Central Device ID"),(0,o.kt)("li",{parentName:"ol"},"DERIVED_KEY: Azure IoT Central Device Derived Key"),(0,o.kt)("li",{parentName:"ol"},"OPEN_WEATHER_MAP_API_KEY: Open Weather Map API Key"),(0,o.kt)("li",{parentName:"ol"},"NETWORK_INTERFACE: Network interface name. eg wlan0, eth0"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"To start the emulator, run the following command."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"./build/Altair_emulator -s ID_SCOPE -d DEVICE_ID -k DERIVED_KEY -o OPEN_WEATHER_MAP_API_KEY -n NETWORK_INTERFACE\n")),(0,o.kt)("p",{parentName:"li"},"To run the emulator as a background task."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nohup ./build/Altair_emulator -s ID_SCOPE -d DEVICE_ID -k DERIVED_KEY -o OPEN_WEATHER_MAP_API_KEY -n NETWORK_INTERFACE &\n")))))}c.isMDXComponent=!0}}]);