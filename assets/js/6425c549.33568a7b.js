"use strict";(self.webpackChunkaltair_docs=self.webpackChunkaltair_docs||[]).push([[7333],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>d});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=o.createContext({}),p=function(e){var t=o.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},m=function(e){var t=p(e.components);return o.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},s=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),s=p(r),d=n,f=s["".concat(c,".").concat(d)]||s[d]||u[d]||i;return r?o.createElement(f,a(a({ref:t},m),{},{components:r})):o.createElement(f,a({ref:t},m))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,a=new Array(i);a[0]=s;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,a[1]=l;for(var p=2;p<i;p++)a[p]=r[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}s.displayName="MDXCreateElement"},2601:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var o=r(7462),n=(r(7294),r(3905));const i={sidebar_position:5},a="Build from the command line",l={unversionedId:"Compile-the-Altair/Compile-from-CLI",id:"Compile-the-Altair/Compile-from-CLI",title:"Build from the command line",description:"Test that you can build the Altair 8800 project.",source:"@site/docs/03-Compile-the-Altair/04-Compile-from-CLI.md",sourceDirName:"03-Compile-the-Altair",slug:"/Compile-the-Altair/Compile-from-CLI",permalink:"/Altair_8800_POSIX_Docs/Compile-the-Altair/Compile-from-CLI",draft:!1,editUrl:"https://github.com/gloveboxes/altair-docs/tree/main/docs/03-Compile-the-Altair/04-Compile-from-CLI.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Build from Visual Studio Code",permalink:"/Altair_8800_POSIX_Docs/Compile-the-Altair/Build-from-vs-code"},next:{title:"Start the Altair emulator",permalink:"/Altair_8800_POSIX_Docs/Compile-the-Altair/Run-the-emulator"}},c={},p=[],m={toc:p};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,o.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"build-from-the-command-line"},"Build from the command line"),(0,n.kt)("p",null,"Test that you can build the Altair 8800 project."),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"From a terminal window, go to the ",(0,n.kt)("em",{parentName:"p"},"Altair8800")," folder that you cloned to your computer.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Run the following commands to compile the Altair project:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"cd AltairHL_emulator && \\\nmkdir -p build && \\\ncmake -B build && \\\ncmake --build build --config release --target all -j 4 && \\\ncd ..\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Check the build completion message to confirm a successful build. The build completion message will be similar to ",(0,n.kt)("inlineCode",{parentName:"p"},"[100%] Built target serializer"),". If the build process fails, check that you installed all the required packages."))))}u.isMDXComponent=!0}}]);