"use strict";(self.webpackChunkaltair_docs=self.webpackChunkaltair_docs||[]).push([[3308],{4137:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>f});var o=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,o,a=function(e,t){if(null==e)return{};var r,o,a={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=o.createContext({}),c=function(e){var t=o.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},m=function(e){var t=c(e.components);return o.createElement(u.Provider,{value:t},e.children)},p="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,u=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),p=c(r),d=a,f=p["".concat(u,".").concat(d)]||p[d]||s[d]||n;return r?o.createElement(f,l(l({ref:t},m),{},{components:r})):o.createElement(f,l({ref:t},m))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,l=new Array(n);l[0]=d;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[p]="string"==typeof e?e:a,l[1]=i;for(var c=2;c<n;c++)l[c]=r[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4767:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>s,frontMatter:()=>n,metadata:()=>i,toc:()=>c});var o=r(7462),a=(r(7294),r(4137));const n={},l="Start the emulator",i={unversionedId:"build-from-source/Run-the-emulator",id:"build-from-source/Run-the-emulator",title:"Start the emulator",description:"1. From a terminal window, go to the Altair8800/AltairHL_emulator folder that you cloned to your computer.",source:"@site/docs/45-build-from-source/05-Run-the-emulator.md",sourceDirName:"45-build-from-source",slug:"/build-from-source/Run-the-emulator",permalink:"/altair_8800_docs/build-from-source/Run-the-emulator",draft:!1,editUrl:"https://github.com/gloveboxes/altair_8800_docs/tree/main/docs/45-build-from-source/05-Run-the-emulator.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Build from the command line",permalink:"/altair_8800_docs/build-from-source/Compile-from-CLI"},next:{title:"Start the web terminal",permalink:"/altair_8800_docs/build-from-source/Start-the-web-terminal"}},u={},c=[],m={toc:c},p="wrapper";function s(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,o.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"start-the-emulator"},"Start the emulator"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"From a terminal window, go to the ",(0,a.kt)("strong",{parentName:"p"},"Altair8800/AltairHL_emulator")," folder that you cloned to your computer.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Before you start the emulator, you need the following information."),(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},"ID_SCOPE: Azure IoT Central ID Scope"),(0,a.kt)("li",{parentName:"ol"},"DEVICE_ID: Azure IoT Central Device ID"),(0,a.kt)("li",{parentName:"ol"},"DERIVED_KEY: Azure IoT Central Device Derived Key"),(0,a.kt)("li",{parentName:"ol"},"OPEN_WEATHER_MAP_API_KEY: Open Weather Map API Key"),(0,a.kt)("li",{parentName:"ol"},"NETWORK_INTERFACE: Network interface name. eg wlan0, eth0"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"To start the emulator, run the following command."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"./build/Altair_emulator -s ID_SCOPE -d DEVICE_ID -k DERIVED_KEY -o OPEN_WEATHER_MAP_API_KEY -n NETWORK_INTERFACE\n")),(0,a.kt)("p",{parentName:"li"},"To run the emulator as a background task."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"nohup ./build/Altair_emulator -s ID_SCOPE -d DEVICE_ID -k DERIVED_KEY -o OPEN_WEATHER_MAP_API_KEY -n NETWORK_INTERFACE &\n")))))}s.isMDXComponent=!0}}]);