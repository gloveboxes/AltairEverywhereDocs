"use strict";(self.webpackChunkaltair_docs=self.webpackChunkaltair_docs||[]).push([[2614],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),h=s(r),d=o,m=h["".concat(p,".").concat(d)]||h[d]||u[d]||a;return r?n.createElement(m,l(l({ref:t},c),{},{components:r})):n.createElement(m,l({ref:t},c))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=h;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var s=2;s<a;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},2527:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:2},l="Deploy the Altair emulator",i={unversionedId:"azsphere/Compile-and-deploy/Deploy-the-Altair-to-Azure-Sphere",id:"azsphere/Compile-and-deploy/Deploy-the-Altair-to-Azure-Sphere",title:"Deploy the Altair emulator",description:"CMakeList configuration",source:"@site/docs/azsphere/Compile-and-deploy/02-Deploy-the-Altair-to-Azure-Sphere.md",sourceDirName:"azsphere/Compile-and-deploy",slug:"/azsphere/Compile-and-deploy/Deploy-the-Altair-to-Azure-Sphere",permalink:"/altair_8800_posix_docs/azsphere/Compile-and-deploy/Deploy-the-Altair-to-Azure-Sphere",draft:!1,editUrl:"https://github.com/gloveboxes/altair_8800_posix_docs/tree/main/docs/azsphere/Compile-and-deploy/02-Deploy-the-Altair-to-Azure-Sphere.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"azsphere",previous:{title:"Install developer tools",permalink:"/altair_8800_posix_docs/azsphere/Compile-and-deploy/Install-developer-tools"},next:{title:"Cloud services",permalink:"/altair_8800_posix_docs/category/cloud-services"}},p={},s=[{value:"CMakeList configuration",id:"cmakelist-configuration",level:2},{value:"Enable Front Panel kit",id:"enable-front-panel-kit",level:3},{value:"Deploy the Altair emulator to the Azure Sphere.",id:"deploy-the-altair-emulator-to-the-azure-sphere",level:2},{value:"Connect the Altair web terminal",id:"connect-the-altair-web-terminal",level:2}],c={toc:s};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"deploy-the-altair-emulator"},"Deploy the Altair emulator"),(0,o.kt)("h2",{id:"cmakelist-configuration"},"CMakeList configuration"),(0,o.kt)("p",null,"Open the ",(0,o.kt)("strong",{parentName:"p"},"AltairHL_emulator")," folder with Visual Studio Code."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Update the CMakeList.txt configuration file"),(0,o.kt)("p",{parentName:"li"},"The CMakeList.txt file must be configured to match your hardware. The following snippet of CMakeList shows the available configuration options."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-cmake"},'# SELECT DEVELOPER BOARD ##########################################################################################\n#\nset(AVNET TRUE "AVNET Azure Sphere Starter Kit Revision 1 ")\n# set(AVNET_REV_2 TRUE "AVNET Azure Sphere Starter Kit Revision 2 ")\n# set(SEEED_STUDIO_RDB TRUE "Seeed Studio Azure Sphere MT3620 Development Kit (aka Reference Design Board or rdb)")\n# set(SEEED_STUDIO_RDB_ETHERNET TRUE "Seeed Studio Azure Sphere MT3620 Development Kit with ethernet shield")\n# set(SEEED_STUDIO_MDB TRUE "Seeed Studio Azure Sphere Mini Developer Board")\n#\n###################################################################################################################\n\n# SELECT FRONT PANEL CONFIG #######################################################################################\n#\nset(ALTAIR_FRONT_PANEL_NONE TRUE "Altair on Azure Sphere with no panel.")\n# set(ALTAIR_FRONT_PANEL_RETRO_CLICK TRUE "Avnet with the MikroE 8800 Retro Click")\n# set(ALTAIR_FRONT_PANEL_KIT TRUE "Altair front panel board")\n#\n###################################################################################################################\n\n# ENABLE SD CARD ##################################################################################################\n#\n# The MikroE microSD Click works with the Avnet Azure Sphere Starter Kit Rev 1 and Rev 2 when in Socket 1.\n# The MikroE microSD Click works with the Mikroe 8800 Retro Click in Socket 2\n# Uncomment the "set(MICRO_SD_CLICK" line below to enable the MikroE microSD Click\n#\n# set(MICRO_SD_CLICK TRUE "MikroE microSD Click for CP/M read/write to SD Card")\n#\n###################################################################################################################\n')))),(0,o.kt)("h3",{id:"enable-front-panel-kit"},"Enable Front Panel kit"),(0,o.kt)("p",null,"If you have built an Altair Front Panel, you need to enable Azure Sphere SPI on ISU1.  Open the ",(0,o.kt)("strong",{parentName:"p"},"app_manifest.json")," file and uncomment the following line."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},'//  Uncomment the following line to enable SPI on ISU1 for the Altair Front Panel\n// "SpiMaster": [ "$MT3620_ISU1_SPI" ],\n')),(0,o.kt)("h2",{id:"deploy-the-altair-emulator-to-the-azure-sphere"},"Deploy the Altair emulator to the Azure Sphere."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Ensure ",(0,o.kt)("strong",{parentName:"li"},"Release")," configuration is selected."),(0,o.kt)("li",{parentName:"ol"},"Press ",(0,o.kt)("kbd",null,"ctrl+F5")," to compile and deploy the Altair emulation application to your Azure Sphere.")),(0,o.kt)("h2",{id:"connect-the-altair-web-terminal"},"Connect the Altair web terminal"),(0,o.kt)("p",null,"The Altair emulator will start running on the Azure Sphere device. Now connect the ",(0,o.kt)("a",{parentName:"p",href:"/altair_8800_posix_docs/start/Web-Terminal"},"Altair web terminal"),"."))}u.isMDXComponent=!0}}]);