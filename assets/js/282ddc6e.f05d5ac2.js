"use strict";(self.webpackChunkaltair_docs=self.webpackChunkaltair_docs||[]).push([[708],{4137:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>h});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var o=a.createContext({}),c=function(e){var t=a.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},m=function(e){var t=c(e.components);return a.createElement(o.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,o=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),u=c(r),d=n,h=u["".concat(o,".").concat(d)]||u[d]||p[d]||l;return r?a.createElement(h,i(i({ref:t},m),{},{components:r})):a.createElement(h,i({ref:t},m))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,i=new Array(l);i[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[u]="string"==typeof e?e:n,i[1]=s;for(var c=2;c<l;c++)i[c]=r[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2010:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var a=r(7462),n=(r(7294),r(4137));const l={},i="Autostart the Altair services",s={unversionedId:"build-from-source/auto-start",id:"build-from-source/auto-start",title:"Autostart the Altair services",description:"The following details how to run the Altair emulator and web terminal as a services on Linux. This will ensure the Altair emulator and web terminal are started when the computer is booted.",source:"@site/docs/45-build-from-source/30-auto-start.md",sourceDirName:"45-build-from-source",slug:"/build-from-source/auto-start",permalink:"/altair_8800_docs/build-from-source/auto-start",draft:!1,editUrl:"https://github.com/gloveboxes/altair_8800_docs/tree/main/docs/45-build-from-source/30-auto-start.md",tags:[],version:"current",sidebarPosition:30,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Start the web terminal",permalink:"/altair_8800_docs/build-from-source/Start-the-web-terminal"},next:{title:"Run on Azure Sphere",permalink:"/altair_8800_docs/category/run-on-azure-sphere"}},o={},c=[],m={toc:c},u="wrapper";function p(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"autostart-the-altair-services"},"Autostart the Altair services"),(0,n.kt)("p",null,"The following details how to run the Altair emulator and web terminal as a services on Linux. This will ensure the Altair emulator and web terminal are started when the computer is booted."),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"From the command line, navigate to ",(0,n.kt)("inlineCode",{parentName:"p"},"Services")," folder of the Altair emulator project you cloned from GitHub."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"cd Services\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Update the .service files with the correct paths."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-shell"},'sed -i "s|/path/to/directory|$(dirname $(pwd))|g" *.service \n'))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Copy the .service files to the systemd folder."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-shell"}," sudo cp *.service  /etc/systemd/system/\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Reload the systemd daemon."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-shell"}," sudo systemctl daemon-reload\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Enable the services."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"sudo systemctl enable altair_emulator.service &&\nsudo systemctl enable altair_terminal.service\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Start the services."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"sudo systemctl start altair_emulator.service &&\nsudo systemctl start altair_terminal.service\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Check the status of the services."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"sudo systemctl status altair_emulator.service &&\nsudo systemctl status altair_terminal.service\n")),(0,n.kt)("p",{parentName:"li"},"If the service is running, you should see something like this:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"\u25cf altair_emulator.service - Altair 8800 Emulator\n        Loaded: loaded (/etc/systemd/system/altair_emulator.service; enabled; vendor preset: enabled)\n        Active: active (running) since Tue 2024-01-02 08:37:28 AEDT; 10min ago\n    Main PID: 992844 (Altair_emulator)\n        Tasks: 5 (limit: 191)\n            CPU: 10min 51.649s\n        CGroup: /system.slice/altair_emulator.service\n                \u2514\u2500992844 /home/pi/github/AltairEverywhere/AltairHL_emulator/build/Altair_emulator\n\n")),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"\u25cf altair_terminal.service  - HTTP Server\n        Loaded: loaded (/etc/systemd/system/altair_terminal.service ; enabled; preset: enabled)\n        Active: active (running) since Tue 2024-01-02 07:06:49 AEDT; 30min ago\n    Main PID: 11489 (python3)\n        Tasks: 1 (limit: 9262)\n            CPU: 114ms\n        CGroup: /system.slice/altair_terminal.service \n                \u2514\u250011489 /usr/bin/python3 -m http.server 80\n")))))}p.isMDXComponent=!0}}]);