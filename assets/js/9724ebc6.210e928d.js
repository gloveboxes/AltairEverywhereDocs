"use strict";(self.webpackChunkaltair_docs=self.webpackChunkaltair_docs||[]).push([[752],{4137:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=o.createContext({}),u=function(e){var t=o.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=u(e.components);return o.createElement(c.Provider,{value:t},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},y=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=u(r),y=n,m=s["".concat(c,".").concat(y)]||s[y]||d[y]||i;return r?o.createElement(m,a(a({ref:t},p),{},{components:r})):o.createElement(m,a({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,a=new Array(i);a[0]=y;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[s]="string"==typeof e?e:n,a[1]=l;for(var u=2;u<i;u++)a[u]=r[u];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}y.displayName="MDXCreateElement"},6128:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var o=r(7462),n=(r(7294),r(4137));const i={},a="Introduction",l={unversionedId:"deploy-with-docker/introduction",id:"deploy-with-docker/introduction",title:"Introduction",description:"The easiest way to run the Altair 8800 emulator is with Docker. You need to install Docker on your 64-bit version of Linux, macOS, Windows, ChromeOS (with developer mode enabled), or Raspberry Pi computer.",source:"@site/docs/40-deploy-with-docker/10-introduction.md",sourceDirName:"40-deploy-with-docker",slug:"/deploy-with-docker/introduction",permalink:"/altair_8800_docs/deploy-with-docker/introduction",draft:!1,editUrl:"https://github.com/gloveboxes/altair_8800_docs/tree/main/docs/40-deploy-with-docker/10-introduction.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Deploy with Docker",permalink:"/altair_8800_docs/category/deploy-with-docker"},next:{title:"Install prerequisites",permalink:"/altair_8800_docs/deploy-with-docker/install-prerequistes"}},c={},u=[],p={toc:u},s="wrapper";function d(e){let{components:t,...r}=e;return(0,n.kt)(s,(0,o.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"introduction"},"Introduction"),(0,n.kt)("p",null,"The easiest way to run the Altair 8800 emulator is with Docker. You need to install Docker on your 64-bit version of Linux, macOS, Windows, ChromeOS (with developer mode enabled), or Raspberry Pi computer."),(0,n.kt)("p",null,"To deploy the Altair emulator with Docker, you need to follow these steps."),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Install prerequisites"),(0,n.kt)("li",{parentName:"ol"},"Start the Altair emulator Docker container"),(0,n.kt)("li",{parentName:"ol"},"Configure cloud services (optional)")))}d.isMDXComponent=!0}}]);